apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    component: backend
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: backend
    spec:
      {{- if .Values.backend.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.backend.nodeSelector | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Release.Name }}-backend
        image: "{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.backend.port }}
        volumeMounts:
        - name: fabric-env
          mountPath: "/home/fabric/.config/fabric/.env"
          subPath: .env
        - name: sync
          mountPath: "{{ .Values.backend.syncFilesMountPath }}"
        env:
          - name: FABRIC_CONFIG_HOME
            value: "{{ .Values.backend.fabricConfigHome }}"
          {{- range $index, $path := .Values.backend.obsidianFolders }}
          - name: OBSIDIAN_VAULT_PATH_{{ add $index 1 }}
            value: "{{ printf "%s/%s" $.Values.backend.syncFilesMountPath $path }}"
          {{- end }}
          - name: FABRIC_PATTERN_PATH
            value: "{{ printf "%s/%s" .Values.backend.syncFilesMountPath .Values.backend.patternFolder }}"
          - name: PERSONAL_NAME
            value: {{ .Values.backend.personalName | quote }}
          - name: TELEGRAM_BOT_TOKEN
            value: {{ .Values.backend.telegramBotToken | quote }}
          - name: JOURNAL_FILE_RETRO_MONTHS
            value: {{ .Values.backend.journalFileRetroMonths | quote }}
      volumes:
      - name: fabric-env
        secret:
          secretName: fabric
      - name: sync
        persistentVolumeClaim:
          claimName: sync
