apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ui
  namespace: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    component: ui
spec:
  replicas: {{ .Values.ui.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: ui
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: ui
      annotations:
        # Add checksum annotation to force deployment restart when scripts configmap changes
        checksum/app-js: {{ .Files.Get "scripts/app.js" | sha256sum }}
        checksum/service-worker-js: {{ .Files.Get "scripts/service-worker.js" | sha256sum }}
        checksum/lib-js: {{ .Files.Get "scripts/lib.js" | sha256sum }}
        checksum/index-html: {{ .Files.Get "scripts/index.html" | sha256sum }}
    spec:
      containers:
      - name: fabric-ui
        image: "{{ .Values.ui.image }}:{{ .Values.ui.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: {{ if .Values.oauth2Proxy.enabled }}1234{{ else }}{{ .Values.ui.port }}{{ end }}
        volumeMounts:
        - name: ui-scripts
          mountPath: /usr/share/nginx/html/app.js
          subPath: app.js
        - name: ui-scripts
          mountPath: /usr/share/nginx/html/lib.js
          subPath: lib.js
        - name: ui-scripts
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        - name: ui-scripts
          mountPath: /usr/share/nginx/html/manifest.json
          subPath: manifest.json
        - name: ui-scripts
          mountPath: /usr/share/nginx/html/service-worker.js
          subPath: service-worker.js
        - name: ui-nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      {{- if .Values.oauth2Proxy.enabled }}
      - name: oauth2-proxy
        image: "{{ .Values.oauth2Proxy.image }}:{{ .Values.oauth2Proxy.tag }}"
        imagePullPolicy: Always
        env:
        - name: OAUTH2_PROXY_PROVIDER
          value: "oidc"
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          value: "{{ .Values.oauth2Proxy.issuerUrl }}"
        - name: OAUTH2_PROXY_CLIENT_ID
          value: "{{ .Values.oauth2Proxy.clientID }}"
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: "{{ .Values.oauth2Proxy.clientSecret }}"
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "{{ .Values.oauth2Proxy.cookieSecret }}"
        - name: OAUTH2_PROXY_COOKIE_SECURE
          value: "true"
        - name: OAUTH2_PROXY_HTTP_ADDRESS
          value: "0.0.0.0:4180"
        - name: OAUTH2_PROXY_UPSTREAM
          value: "http://127.0.0.1:1234"
        - name: OAUTH2_PROXY_REDIRECT_URL
          value: "{{ .Values.oauth2Proxy.redirectUrl }}"
        ports:
        - name: http
          containerPort: 4180
        readinessProbe:
          httpGet:
            path: /oauth2/healthz
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /oauth2/healthz
            port: 4180
          initialDelaySeconds: 10
          periodSeconds: 10
      {{- end }}
      volumes:
      - name: ui-scripts
        configMap:
          name: {{ .Release.Name }}-ui-scripts
          defaultMode: 0644
      - name: ui-nginx-config
        configMap:
          name: {{ .Release.Name }}-ui-nginx-config
          defaultMode: 0644
