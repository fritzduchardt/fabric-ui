apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-ui-nginx-config
  namespace: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    component: ui
data:
  nginx.conf: |-
    events {
      worker_connections 1024;
    }
    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      server {
        # Bind to the configured UI port
        listen {{ .Values.ui.containerPort }};
        # Catch-all server_name
        server_name _;
        # Document root for UI files
        root /usr/share/nginx/html;
        # Default file to serve
        index index.html;
        # Proxy API requests to backend service, stripping /api prefix
        location /api/ {
          # Forward requests to backend service defined by Helm values
          proxy_pass http://{{ .Release.Name }}-backend:{{ .Values.backend.port }}/;

          # Settings for Server-Sent Events (SSE)
          proxy_set_header Connection '';
          proxy_set_header Cache-Control 'no-cache';
          proxy_buffering off;

          # Preserve client information
          proxy_read_timeout 300s;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Allow acme http01 challenges
        location ^~ /.well-known/ {
          allow all;                                                                                                                                                                           # SPA fallback: serve index.html for non-file routes
          root /usr/share/nginx/html;                                                                                                                                                           location / {
        }
        try_files $uri $uri/ /index.html;
        }
        # Service worker script: exact path, disable caching
        location = /service-worker.js {
          expires off;
          add_header Cache-Control "no-cache, no-store, must-revalidate";
          add_header Pragma "no-cache";
          add_header Surrogate-Control "no-store";
        }
        # Serve static assets directly, returning 404 if missing
        location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|json)$ {
          try_files $uri =404;
          # Cache static assets for maximum duration
          expires max;
          # Disable fabric-uiaccess logs for assets
          access_log off;
        }
        # Deny access to hidden files (e.g., .env, .git)
        location ~ /\. {
          deny all;
        }
      }
    }
